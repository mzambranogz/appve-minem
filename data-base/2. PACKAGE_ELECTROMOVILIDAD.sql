
--  DDL for Package HEAD PKG_ELECTROMOV_ADMIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "ELECTROMOVILIDAD"."PKG_ELECTROMOV_ADMIN" AS 

  PROCEDURE USP_SEL_VERIFICAR_EMAIL(
    PI_EMAIL_USUARIO  IN VARCHAR2,
    PI_VERIFICAR      OUT NUMBER
  );
  
  PROCEDURE USP_SEL_USUARIO_CORREO(
        PI_CORREO  IN VARCHAR2,
        PO_CURSOR  OUT SYS_REFCURSOR
  );

END PKG_ELECTROMOV_ADMIN;

/



--------------------------------------------------------
--  DDL for Package HEAD PKG_ELECTROMOV_CALCULO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "ELECTROMOVILIDAD"."PKG_ELECTROMOV_CALCULO" AS 

  PROCEDURE USP_SEL_LIST_TIPO_COMBUS(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LIST_TIPO_TRANSP(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LIST_TIPO_VEH_CONV(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LIST_TIPO_VEH_ELEC(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_GET_FORMULA(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_FACTOR_PARAMETRO(
    PI_ID_FACTOR NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_FACTOR_VALOR(
    PI_ID_FACTOR NUMBER,
    PI_SQL_WHERE VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_MAN_GUARDA_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PI_RUC VARCHAR2,
    PI_RAZON_SOCIAL VARCHAR2,
    PI_CORREO VARCHAR2,
    PI_TELEFONO VARCHAR2,
    PI_DIRECCION VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PI_ID_GET OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_LISTA_FACTOR_1P(
    PI_ID_FACTOR NUMBER,
    PI_ID_P1 NUMBER,
    PI_V_P1 NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_FACTOR_2P(
    PI_ID_FACTOR NUMBER,
    PI_ID_P1 NUMBER,
    PI_ID_P2 NUMBER,
    PI_V_P1 NUMBER,
    PI_V_P2 NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_FACTOR_3P(
    PI_ID_FACTOR NUMBER,
    PI_ID_P1 NUMBER,
    PI_ID_P2 NUMBER,
    PI_ID_P3 NUMBER,
    PI_V_P1 NUMBER,
    PI_V_P2 NUMBER,
    PI_V_P3 NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LIST_MODELO_VEH(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LIST_TIPO_CARGADOR(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LIST_CARGADOR_POTENC(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LIST_DEPARTAMENTO(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_GUARDAR_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PI_RUC VARCHAR2,
    PI_RAZON_SOCIAL VARCHAR2,
    PI_CORREO VARCHAR2,
    PI_TELEFONO VARCHAR2,
    PI_DIRECCION VARCHAR2,    
    PI_UPD_USUARIO NUMBER,
    PI_ID_GET IN OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_PRC_GUARDAR_ESTACION(
    PI_ID_ESTACION NUMBER,
    PI_ID_USUARIO NUMBER,
	PI_LONGITUD VARCHAR,
    PI_LATITUD VARCHAR,
    PI_DIRECCION VARCHAR, 
    PI_DESCRIPCION VARCHAR2,
    PI_MODELO VARCHAR2,
    PI_MARCA VARCHAR2,
    PI_POTENCIA NUMBER,
    PI_MODO_CARGA VARCHAR2,
    PI_TIPO_CARGADOR VARCHAR2,
    PI_TIPO_CONECTOR VARCHAR2,
    PI_CANTIDAD_CONECTOR NUMBER,
    PI_HORA_DESDE VARCHAR2,
    PI_HORA_HASTA VARCHAR2,
    PI_TARIFA_SERVICIO NUMBER,
    PI_ID_ESTADO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PI_ID_GET IN OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_PRC_MAN_DOCUMENTO_DATA(
    PI_ID_DOCUMENTO NUMBER,
    PI_ID_ESTACION VARCHAR2,
    PI_ARCHIVO_BASE VARCHAR2,   
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_PRC_MAN_DOCUMENTO_IMG(
    PI_ID_DOCUMENTO NUMBER,
    PI_ID_ESTACION VARCHAR2,
    PI_ARCHIVO_BASE VARCHAR2,
    PI_FLAG_ESTADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_DEL_DOCUMENTO_IMG(
    PI_ID_ESTACION NUMBER
  );
  
  PROCEDURE USP_SEL_ESTACION_USUARIO(
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_ALL_DOCUMENTO(
    PO_REF OUT SYS_REFCURSOR,
    PI_ID_ESTACION NUMBER
  );
  
  PROCEDURE USP_SEL_ALL_IMAGEN(
    PO_REF OUT SYS_REFCURSOR,
    PI_ID_ESTACION NUMBER
  );
  
  PROCEDURE USP_SEL_USUARIO_INSTITUCION(
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR    
  );
  
  PROCEDURE USP_SEL_ESTACION(
    PI_ID_ESTACION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_DEL_ESTACION(
    PI_ID_ESTACION NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GENERAR_DETALLE_RESULT(
    PI_ID_USUARIO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PI_ID_GET OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GUARDAR_LEYENDA(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_NOMBRE_TRANSPORTE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GUARDAR_COSTO_VC(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_CUOTA_INICIAL NUMBER,
    PI_INCENTIVO_ECONOMICO NUMBER,
    PI_RECAMBIO_BATERIA NUMBER,
    PI_SEGURO NUMBER,
    PI_ENERGIA NUMBER,
    PI_MANTENIMIENTO_CONTINUO NUMBER,
    PI_CARGA_FINANCIERA NUMBER,
    PI_CARGA_INSTALACION NUMBER,
    PI_REVENTA_VEHICULO NUMBER,
    PI_OTROS_TRANSPORTES NUMBER,
    PI_MANTENIMIENTO_EXTRAORDINA NUMBER,
    PI_TOTAL NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GUARDAR_COSTO_VE(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_CUOTA_INICIAL NUMBER,
    PI_INCENTIVO_ECONOMICO NUMBER,
    PI_RECAMBIO_BATERIA NUMBER,
    PI_SEGURO NUMBER,
    PI_ENERGIA NUMBER,
    PI_MANTENIMIENTO_CONTINUO NUMBER,
    PI_CARGA_FINANCIERA NUMBER,
    PI_CARGA_INSTALACION NUMBER,
    PI_REVENTA_VEHICULO NUMBER,
    PI_OTROS_TRANSPORTES NUMBER,
    PI_MANTENIMIENTO_EXTRAORDINA NUMBER,
    PI_TOTAL NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GUARDAR_CONSUMO_VC(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_VEHICULO_PROPIO_VC NUMBER,
    PI_SERVICIO_PUBLICO_1 NUMBER,
    PI_SERVICIO_PUBLICO_2 NUMBER,
    PI_SERVICIO_PUBLICO_3 NUMBER,
    PI_SERVICIO_PUBLICO_4 NUMBER,
    PI_TOTAL_PUBLICO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GUARDAR_CONSUMO_VE(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_VEHICULO_PROPIO_VE NUMBER,
    PI_SERVICIO_PUBLICO_1 NUMBER,
    PI_SERVICIO_PUBLICO_2 NUMBER,
    PI_SERVICIO_PUBLICO_3 NUMBER,
    PI_SERVICIO_PUBLICO_4 NUMBER,
    PI_TOTAL_PUBLICO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GUARDAR_EMISIONES_VC(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_FABRICACION_BATERIA_VC NUMBER,
    PI_OPERACION_VEHICULO_VC NUMBER,
    PI_FABRICACION_VEHICULO_VC NUMBER,
    PI_SERVICIO_TRANSPORTE NUMBER,
    PI_TOTAL_VC NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GUARDAR_EMISIONES_VE(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_FABRICACION_BATERIA_VE NUMBER,
    PI_OPERACION_VEHICULO_VE NUMBER,
    PI_FABRICACION_VEHICULO_VE NUMBER,
    PI_SERVICIO_TRANSPORTE NUMBER,
    PI_TOTAL_VE NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_INS_GUARDAR_CONTAMINANTE(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_TOTAL_NOX NUMBER,
    PI_TOTAL_CO NUMBER,
    PI_TOTAL_PM25 NUMBER,
    PI_TOTAL_BC NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_LISTA_RESULTADOS(
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_LEYENDA(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_COSTO_VC(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_COSTO_VE(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_CONSUMO_VC(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_CONSUMO_VE(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_EMISIONES_VC(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_EMISIONES_VE(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_CONTAMINANTE(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_DEL_RESULTADO(
    PI_ID_RESULTADO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_ALL_ESTACION(
	PO_REF OUT SYS_REFCURSOR
  );

END PKG_ELECTROMOV_CALCULO;

/



--------------------------------------------------------
--  DDL for Package HEAD PKG_ELECTROMOV_MANTENIMIENTO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "ELECTROMOVILIDAD"."PKG_ELECTROMOV_MANTENIMIENTO" AS 

  PROCEDURE USP_RESET_USUARIO(
    PI_CORREO VARCHAR2,
    PI_CONTRASENA VARCHAR2,
    PO_ROWAFFECTED OUT NUMBER
  );

  --SECCION ROL
  PROCEDURE USP_SEL_LISTA_BUSQ_ROL(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_UPD_ROL(
    PI_ID_ROL NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  );
  
  PROCEDURE USP_SEL_GET_ROL(
    PI_ID_ROL NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_OBTIENE_ROL(
    PI_ID_ROL NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  --SECCION TIPO VEHICULO CONVENCIONAL
  PROCEDURE USP_SEL_LISTA_BUSQ_VEH_CONV(
    PI_BUSCAR VARCHAR2,
	PI_FLAG_ESTADO VARCHAR2,						
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_GUARDAR_TIPO_VEH_CONV(
    PI_ID_TIPO_VEHICULO_CONV NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_GET_TIPO_VEH_CONV(
    PI_ID_TIPO_VEHICULO_CONV NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_DEL_TIPO_VEH_CONV(
    PI_ID_TIPO_VEHICULO_CONV NUMBER,
    PI_UPD_USUARIO NUMBER
  );
  
  --SECCION TIPO VEHICULO ELECTRICO
  PROCEDURE USP_SEL_LISTA_BUSQ_VEH_ELEC(
    PI_BUSCAR VARCHAR2,
	PI_FLAG_ESTADO VARCHAR2,						
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_GUARDAR_TIPO_VEH_ELEC(
    PI_ID_TIPO_VEHICULO_ELEC NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_GET_TIPO_VEH_ELEC(
    PI_ID_TIPO_VEHICULO_ELEC NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_DEL_TIPO_VEH_ELEC(
    PI_ID_TIPO_VEHICULO_ELEC NUMBER,
    PI_UPD_USUARIO NUMBER
  );
  
  --SECCION TIPO TRANSPORTE
  PROCEDURE USP_SEL_LISTA_BUSQ_TRANSP(
    PI_BUSCAR VARCHAR2,
	PI_FLAG_ESTADO VARCHAR2,						
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_PRC_GUARDAR_TIPO_TRANSP(
    PI_ID_TIPO_TRANSPORTE NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );

  PROCEDURE USP_DEL_TIPO_TRANSP(
    PI_ID_TIPO_TRANSPORTE NUMBER,
    PI_UPD_USUARIO NUMBER
  );

  PROCEDURE USP_SEL_GET_TIPO_TRANSP(
    PI_ID_TIPO_TRANSPORTE NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  --SECCION FORMULA
  PROCEDURE USP_SEL_LIST_CASO(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LIST_FACTOR(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LIST_PARAMETRO(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_BUSQ_FORMULA(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_GET_FORMULA(
    PI_ID_FORMULA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_UPD_FORMULA(
    PI_ID_FORMULA NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_FORMULA VARCHAR2,
    PI_FORMULA_ARMADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  --SECCION VALORES FACTOR
  PROCEDURE USP_SEL_LISTA_BUSQ_CASO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LIST_CASO_FACTOR(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_DATA_PARAM_DET(
    PI_SQL VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_GET_LISTA_FACTOR_VALOR(
      PI_ID_FACTOR VARCHAR2,
      PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_MAN_FACTOR_DATA(
      PI_ID_FACTOR IN NUMBER,
      PI_ID_DETALLE IN NUMBER,
      PI_PARAMETROS IN VARCHAR2,
      PI_VALORES IN VARCHAR2,
      PI_FACTOR IN NUMBER,
      PI_UNIDAD VARCHAR2,
      PI_USUARIO_GUARDAR NUMBER,
      PO_ROWAFFECTED OUT NUMBER        
  );
  
  --SECCION TIPO COMBUSTIBLE
  PROCEDURE USP_SEL_LISTA_BUSQ_COMBUS(
    PI_BUSCAR VARCHAR2,
	PI_FLAG_ESTADO VARCHAR2,						
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_GUARDAR_TIPO_COMBUS(
    PI_ID_TIPO_COMBUSTIBLE NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_GET_TIPO_COMBUS(
    PI_ID_TIPO_COMBUSTIBLE NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_DEL_TIPO_COMBUS(
    PI_ID_TIPO_COMBUSTIBLE NUMBER,
    PI_UPD_USUARIO NUMBER
  );
  
  --SECCION USUARIO
  PROCEDURE USP_SEL_LISTA_BUSQ_USUARIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_OBTIENE_USUARIO(
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_GUARDAR_USUARIO(
    PI_ID_USUARIO IN OUT NUMBER,
    PI_NOMBRES VARCHAR2,
    PI_ID_GENERO NUMBER,
    PI_CORREO VARCHAR2,
    PI_CONTRASENA VARCHAR2,
    PI_ID_ROL NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  --
  PROCEDURE USP_SEL_LISTA_ROL_ESTADO(
    PI_FLAG_ESTADO VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );

END PKG_ELECTROMOV_MANTENIMIENTO;

/




























--------------------------------------------------------
--  DDL for Package Body PKG_ELECTROMOV_ADMIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "ELECTROMOVILIDAD"."PKG_ELECTROMOV_ADMIN" AS

  PROCEDURE USP_SEL_VERIFICAR_EMAIL(
    PI_EMAIL_USUARIO  IN VARCHAR2,
    PI_VERIFICAR      OUT NUMBER
  ) IS
    vVerificar  NUMBER;
  BEGIN
        SELECT COUNT(*) INTO vVerificar
        FROM T_GENM_USUARIO
        WHERE LOWER(TRANSLATE(CORREO,'ÁÉÍÓÚáéíóú','AEIOUaeiou')) = LOWER(TRANSLATE(PI_EMAIL_USUARIO,'ÁÉÍÓÚáéíóú','AEIOUaeiou'));
        PI_VERIFICAR := vVerificar;
  END USP_SEL_VERIFICAR_EMAIL;
  
  PROCEDURE USP_SEL_USUARIO_CORREO(
        PI_CORREO  IN VARCHAR2,
        PO_CURSOR  OUT SYS_REFCURSOR
  ) AS
  BEGIN
      OPEN PO_CURSOR FOR
      SELECT U.*, R.NOMBRE NOMBRE_ROL
      FROM T_GENM_USUARIO U
      INNER JOIN T_MAE_ROL R ON U.ID_ROL = R.ID_ROL
      WHERE LOWER(TRANSLATE(U.CORREO,'ÁÉÍÓÚáéíóú','AEIOUaeiou')) = LOWER(TRANSLATE(PI_CORREO,'ÁÉÍÓÚáéíóú','AEIOUaeiou'));
  END USP_SEL_USUARIO_CORREO;

END PKG_ELECTROMOV_ADMIN;

/


--------------------------------------------------------
--  DDL for Package Body PKG_ELECTROMOV_CALCULO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "ELECTROMOVILIDAD"."PKG_ELECTROMOV_CALCULO" AS

  PROCEDURE USP_SEL_LIST_TIPO_COMBUS(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_TIPO_COMBUSTIBLE
	WHERE FLAG_ESTADO = '1'							
    ORDER BY ID_TIPO_COMBUSTIBLE;
  END USP_SEL_LIST_TIPO_COMBUS;

  PROCEDURE USP_SEL_LIST_TIPO_TRANSP(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_TIPO_TRANSPORTE
	WHERE FLAG_ESTADO = '1'							
    ORDER BY ID_TIPO_TRANSPORTE;
  END USP_SEL_LIST_TIPO_TRANSP;
  
  PROCEDURE USP_SEL_LIST_TIPO_VEH_CONV(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_TIPO_VEHICULO_CONV
    WHERE FLAG_ESTADO = '1'
    ORDER BY ID_TIPO_VEHICULO_CONV;
  END USP_SEL_LIST_TIPO_VEH_CONV;
  
  PROCEDURE USP_SEL_LIST_TIPO_VEH_ELEC(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_TIPO_VEHICULO_ELEC
	WHERE FLAG_ESTADO = '1'							
    ORDER BY ID_TIPO_VEHICULO_ELEC;
  END USP_SEL_LIST_TIPO_VEH_ELEC;
  
  PROCEDURE USP_SEL_GET_FORMULA(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_FORMULA
    WHERE ID_CASO = PI_ID_CASO;
  END USP_SEL_GET_FORMULA;
  
  PROCEDURE USP_SEL_FACTOR_PARAMETRO(
    PI_ID_FACTOR NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )
  AS
  BEGIN
        OPEN PO_REF FOR
        SELECT  FP.*,
                (SELECT COUNT(1)
                FROM    T_MAE_FACTOR_PARAMETRO FP
                WHERE   FP.ID_FACTOR = PI_ID_FACTOR
                        AND FP.ID_PARAMETRO IS NOT NULL) NUMERO_PARAMETROS
        FROM    T_MAE_FACTOR F,
                T_MAE_FACTOR_PARAMETRO FP
        WHERE   F.ID_FACTOR = PI_ID_FACTOR
                AND F.ID_FACTOR = FP.ID_FACTOR
                AND FP.ID_PARAMETRO IS NOT NULL
                AND FP.FLAG_ESTADO = '1'
        ORDER BY FP.ORDEN;
  END USP_SEL_FACTOR_PARAMETRO;
  
  PROCEDURE USP_SEL_FACTOR_VALOR(
    PI_ID_FACTOR NUMBER,
    PI_SQL_WHERE VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  )
  AS
    V_SQL VARCHAR2(4000);
  BEGIN
    V_SQL := 'SELECT  *
            FROM    T_MAE_FACTOR_DATA F
            WHERE   F.ID_FACTOR = ' || TO_CHAR(PI_ID_FACTOR) || ' ';
    V_SQL := V_SQL || PI_SQL_WHERE;

    OPEN PO_REF FOR V_SQL;
  END USP_SEL_FACTOR_VALOR;
  
  PROCEDURE USP_MAN_GUARDA_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PI_RUC VARCHAR2,
    PI_RAZON_SOCIAL VARCHAR2,
    PI_CORREO VARCHAR2,
    PI_TELEFONO VARCHAR2,
    PI_DIRECCION VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PI_ID_GET OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN    
    IF PI_ID_INSTITUCION = -1 THEN
      PI_ID_GET := SQ_GENM_INSTITUCION.NEXTVAL();
      INSERT INTO T_GENM_INSTITUCION (ID_INSTITUCION, RUC, RAZON_SOCIAL, CORREO, TELEFONO, DIRECCION, ID_USUARIO, REG_USUARIO, REG_FECHA)
      VALUES (PI_ID_GET, PI_RUC, PI_RAZON_SOCIAL, PI_CORREO, PI_TELEFONO, PI_DIRECCION, PI_UPD_USUARIO, PI_UPD_USUARIO, SYSDATE);
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_MAN_GUARDA_INSTITUCION;
  
  PROCEDURE USP_SEL_LISTA_FACTOR_1P(
    PI_ID_FACTOR NUMBER,
    PI_ID_P1 NUMBER,
    PI_V_P1 NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_MAE_FACTOR_DATA F
    WHERE   F.ID_FACTOR = PI_ID_FACTOR AND F.PARAMETROS = PI_ID_P1 AND F.VALORES = PI_V_P1;
  END USP_SEL_LISTA_FACTOR_1P;
  
  PROCEDURE USP_SEL_LISTA_FACTOR_2P(
    PI_ID_FACTOR NUMBER,
    PI_ID_P1 NUMBER,
    PI_ID_P2 NUMBER,
    PI_V_P1 NUMBER,
    PI_V_P2 NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_MAE_FACTOR_DATA F
    WHERE   F.ID_FACTOR = PI_ID_FACTOR AND F.PARAMETROS = PI_ID_P1 || '|' || PI_ID_P2 AND F.VALORES = PI_V_P1 || '|' || PI_V_P2;
  END USP_SEL_LISTA_FACTOR_2P;
  
  PROCEDURE USP_SEL_LISTA_FACTOR_3P(
    PI_ID_FACTOR NUMBER,
    PI_ID_P1 NUMBER,
    PI_ID_P2 NUMBER,
    PI_ID_P3 NUMBER,
    PI_V_P1 NUMBER,
    PI_V_P2 NUMBER,
    PI_V_P3 NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_MAE_FACTOR_DATA F
    WHERE   F.ID_FACTOR = PI_ID_FACTOR AND F.PARAMETROS = PI_ID_P1 || '|' || PI_ID_P2 || '|' || PI_ID_P3 AND F.VALORES = PI_V_P1 || '|' || PI_V_P2 || '|' || PI_V_P3;
  END USP_SEL_LISTA_FACTOR_3P;
  
  PROCEDURE USP_SEL_LIST_MODELO_VEH(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_MODELO_VEHICULO_ELEC
    ORDER BY ID_MODELO;
  END USP_SEL_LIST_MODELO_VEH;
  
  PROCEDURE USP_SEL_LIST_TIPO_CARGADOR(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_TIPO_CARGADOR
    ORDER BY ID_CARGADOR;
  END USP_SEL_LIST_TIPO_CARGADOR;
  
  PROCEDURE USP_SEL_LIST_CARGADOR_POTENC(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_GENM_CARGADOR_POTENCIA
    ORDER BY ID_POTENCIA;
  END USP_SEL_LIST_CARGADOR_POTENC;
  
  PROCEDURE USP_SEL_LIST_DEPARTAMENTO(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_MAE_DEPARTAMENTO
    ORDER BY ID_DEPARTAMENTO;
  END USP_SEL_LIST_DEPARTAMENTO;
  
  PROCEDURE USP_PRC_GUARDAR_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PI_RUC VARCHAR2,
    PI_RAZON_SOCIAL VARCHAR2,
    PI_CORREO VARCHAR2,
    PI_TELEFONO VARCHAR2,
    PI_DIRECCION VARCHAR2,    
    PI_UPD_USUARIO NUMBER,
    PI_ID_GET IN OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN    
    IF PI_ID_INSTITUCION = -1 THEN
      PI_ID_GET := SQ_GENM_INSTITUCION.NEXTVAL();
      INSERT INTO T_GENM_INSTITUCION
      (ID_INSTITUCION, RUC, RAZON_SOCIAL, CORREO, TELEFONO, DIRECCION, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_GET, PI_RUC, PI_RAZON_SOCIAL, PI_CORREO, PI_TELEFONO, PI_DIRECCION, PI_UPD_USUARIO, SYSDATE);
      
      UPDATE T_GENM_USUARIO SET ID_INSTITUCION = PI_ID_GET WHERE ID_USUARIO = PI_UPD_USUARIO;
    ELSE
      UPDATE T_GENM_INSTITUCION C SET
      C.RUC = PI_RUC,
      C.RAZON_SOCIAL = PI_RAZON_SOCIAL,
      C.CORREO = PI_CORREO,
      C.TELEFONO = PI_TELEFONO,
      C.DIRECCION = PI_DIRECCION,
      C.UPD_USUARIO = PI_UPD_USUARIO,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_INSTITUCION = PI_ID_INSTITUCION;
      PI_ID_GET := PI_ID_INSTITUCION;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_INSTITUCION;
  
  PROCEDURE USP_PRC_GUARDAR_ESTACION(
    PI_ID_ESTACION NUMBER,
    PI_ID_USUARIO NUMBER,
	PI_LONGITUD VARCHAR,
    PI_LATITUD VARCHAR,
    PI_DIRECCION VARCHAR, 
    PI_DESCRIPCION VARCHAR2,
    PI_MODELO VARCHAR2,
    PI_MARCA VARCHAR2,
    PI_POTENCIA NUMBER,
    PI_MODO_CARGA VARCHAR2,
    PI_TIPO_CARGADOR VARCHAR2,
    PI_TIPO_CONECTOR VARCHAR2,
    PI_CANTIDAD_CONECTOR NUMBER,
    PI_HORA_DESDE VARCHAR2,
    PI_HORA_HASTA VARCHAR2,
    PI_TARIFA_SERVICIO NUMBER,
    PI_ID_ESTADO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PI_ID_GET IN OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN    
    IF PI_ID_ESTACION = -1 THEN
      PI_ID_GET := SQ_GENM_ESTACION.NEXTVAL();
      INSERT INTO T_GENM_ESTACION
      (ID_ESTACION, LONGITUD, LATITUD, DIRECCION, DESCRIPCION, MODELO, MARCA, POTENCIA, MODO_CARGA, TIPO_CARGADOR, TIPO_CONECTOR, CANTIDAD_CONECTOR, HORA_DESDE, HORA_HASTA, TARIFA_SERVICIO, ID_USUARIO, ID_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_GET, PI_LONGITUD, PI_LATITUD, PI_DIRECCION, PI_DESCRIPCION, PI_MODELO, PI_MARCA, PI_POTENCIA, PI_MODO_CARGA, PI_TIPO_CARGADOR, PI_TIPO_CONECTOR, PI_CANTIDAD_CONECTOR, PI_HORA_DESDE, PI_HORA_HASTA, PI_TARIFA_SERVICIO, PI_ID_USUARIO, PI_ID_ESTADO, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_ESTACION C SET
	  C.LONGITUD = PI_DIRECCION,
      C.LATITUD = PI_LATITUD,
      C.DIRECCION = PI_DIRECCION,
      C.DESCRIPCION = PI_DESCRIPCION,
      C.MODELO = PI_MODELO,
      C.MARCA = PI_MARCA,
      C.POTENCIA = PI_POTENCIA,
      C.MODO_CARGA = PI_MODO_CARGA,
      C.TIPO_CARGADOR = PI_TIPO_CARGADOR,
      C.TIPO_CONECTOR = PI_TIPO_CONECTOR,
      C.CANTIDAD_CONECTOR = PI_CANTIDAD_CONECTOR,
      C.HORA_DESDE = PI_HORA_DESDE,
      C.HORA_HASTA = PI_HORA_HASTA,
      C.TARIFA_SERVICIO = PI_TARIFA_SERVICIO,
      --C.ID_USUARIO = PI_UPD_USUARIO,
      C.ID_ESTADO = PI_ID_ESTADO,
      C.UPD_USUARIO = PI_UPD_USUARIO,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_ESTACION = PI_ID_ESTACION;
      PI_ID_GET := PI_ID_ESTACION;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_ESTACION;
  
  PROCEDURE USP_PRC_MAN_DOCUMENTO_DATA(
    PI_ID_DOCUMENTO NUMBER,
    PI_ID_ESTACION VARCHAR2,
    PI_ARCHIVO_BASE VARCHAR2,   
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    V_ID NUMBER;
  BEGIN    
    SELECT COUNT(*) INTO V_ID FROM T_GEND_DOCUMENTO_ESTACION WHERE ID_DOCUMENTO = PI_ID_DOCUMENTO AND ID_ESTACION = PI_ID_ESTACION;
    
    IF V_ID = 0 THEN
      INSERT INTO T_GEND_DOCUMENTO_ESTACION (ID_DOCUMENTO, ID_ESTACION, ARCHIVO_BASE, REG_USUARIO, REG_FECHA)
      VALUES (PI_ID_DOCUMENTO, PI_ID_ESTACION, PI_ARCHIVO_BASE, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GEND_DOCUMENTO_ESTACION C SET
      C.ARCHIVO_BASE = PI_ARCHIVO_BASE,
      C.UPD_USUARIO = PI_UPD_USUARIO,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_DOCUMENTO = PI_ID_DOCUMENTO AND C.ID_ESTACION = PI_ID_ESTACION;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_MAN_DOCUMENTO_DATA;
  
  PROCEDURE USP_PRC_MAN_DOCUMENTO_IMG(
    PI_ID_DOCUMENTO NUMBER,
    PI_ID_ESTACION VARCHAR2,
    PI_ARCHIVO_BASE VARCHAR2,
    PI_FLAG_ESTADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    V_ID NUMBER;
  BEGIN    
    SELECT COUNT(*) INTO V_ID FROM T_GEND_IMAGEN_ESTACION WHERE ID_IMAGEN = PI_ID_DOCUMENTO AND ID_ESTACION = PI_ID_ESTACION;
    
    IF V_ID = 0 THEN
      INSERT INTO T_GEND_IMAGEN_ESTACION (ID_IMAGEN, ID_ESTACION, ARCHIVO_BASE, FLAG_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES (PI_ID_DOCUMENTO, PI_ID_ESTACION, PI_ARCHIVO_BASE, PI_FLAG_ESTADO, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GEND_IMAGEN_ESTACION C SET
      C.ARCHIVO_BASE = PI_ARCHIVO_BASE,
      C.FLAG_ESTADO = PI_FLAG_ESTADO,
      C.UPD_USUARIO = PI_UPD_USUARIO,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_IMAGEN = PI_ID_DOCUMENTO AND C.ID_ESTACION = PI_ID_ESTACION;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_MAN_DOCUMENTO_IMG;
  
  PROCEDURE USP_DEL_DOCUMENTO_IMG(
    PI_ID_ESTACION NUMBER
  ) AS
  BEGIN 
      UPDATE T_GEND_IMAGEN_ESTACION C SET
      C.FLAG_ESTADO = '0',
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_ESTACION = PI_ID_ESTACION;
  END USP_DEL_DOCUMENTO_IMG;
  
  PROCEDURE USP_SEL_ESTACION_USUARIO(
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  
    *
    FROM  T_GENM_ESTACION
    WHERE FLAG_ESTADO = '1' AND ID_USUARIO = PI_ID_USUARIO
    ORDER BY ID_ESTACION ASC;
  END USP_SEL_ESTACION_USUARIO;
  
  PROCEDURE USP_SEL_ALL_DOCUMENTO(
    PO_REF OUT SYS_REFCURSOR,
    PI_ID_ESTACION NUMBER
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  
    *
    FROM  T_GEND_DOCUMENTO_ESTACION
    WHERE FLAG_ESTADO = '1' AND ID_ESTACION = PI_ID_ESTACION
    ORDER BY ID_DOCUMENTO ASC; 
  END USP_SEL_ALL_DOCUMENTO;
  
  PROCEDURE USP_SEL_ALL_IMAGEN(
    PO_REF OUT SYS_REFCURSOR,
    PI_ID_ESTACION NUMBER
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  
    ID_IMAGEN ID_DOCUMENTO, ARCHIVO_BASE, ID_ESTACION
    FROM  T_GEND_IMAGEN_ESTACION
    WHERE FLAG_ESTADO = '1' AND ID_ESTACION = PI_ID_ESTACION
    ORDER BY ID_IMAGEN ASC;
  END USP_SEL_ALL_IMAGEN;
  
  PROCEDURE USP_SEL_USUARIO_INSTITUCION(
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR    
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GENM_USUARIO
    WHERE ID_USUARIO = PI_ID_USUARIO;
  END USP_SEL_USUARIO_INSTITUCION;
  
  PROCEDURE USP_SEL_ESTACION(
    PI_ID_ESTACION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  
    *
    FROM  T_GENM_ESTACION
    WHERE  ID_ESTACION = PI_ID_ESTACION;
  END USP_SEL_ESTACION;
  
  PROCEDURE USP_DEL_ESTACION(
    PI_ID_ESTACION NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_ESTACION
    SET    FLAG_ESTADO = '0'
    WHERE  ID_ESTACION = PI_ID_ESTACION;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_DEL_ESTACION;
  
  PROCEDURE USP_INS_GENERAR_DETALLE_RESULT(
    PI_ID_USUARIO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PI_ID_GET OUT NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    PI_ID_GET := SQ_GENM_RESULTADO.NEXTVAL();
    INSERT INTO T_GENM_RESULTADO (ID_RESULTADO, ID_USUARIO, REG_USUARIO, REG_FECHA)
    VALUES (PI_ID_GET, PI_ID_USUARIO, PI_UPD_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GENERAR_DETALLE_RESULT;
  
  PROCEDURE USP_INS_GUARDAR_LEYENDA(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_NOMBRE_TRANSPORTE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    INSERT INTO T_GEND_LEYENDA (ID_RESULTADO, ID_USUARIO, ID_DETALLE, NOMBRE_TRANSPORTE, REG_USUARIO, REG_FECHA)
    VALUES (PI_ID_RESULTADO, PI_ID_USUARIO, PI_ID_DETALLE, PI_NOMBRE_TRANSPORTE, PI_UPD_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_LEYENDA;
  
  PROCEDURE USP_INS_GUARDAR_COSTO_VC(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_CUOTA_INICIAL NUMBER,
    PI_INCENTIVO_ECONOMICO NUMBER,
    PI_RECAMBIO_BATERIA NUMBER,
    PI_SEGURO NUMBER,
    PI_ENERGIA NUMBER,
    PI_MANTENIMIENTO_CONTINUO NUMBER,
    PI_CARGA_FINANCIERA NUMBER,
    PI_CARGA_INSTALACION NUMBER,
    PI_REVENTA_VEHICULO NUMBER,
    PI_OTROS_TRANSPORTES NUMBER,
    PI_MANTENIMIENTO_EXTRAORDINA NUMBER,
    PI_TOTAL NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    INSERT INTO T_GEND_COSTO_VC (ID_RESULTADO, ID_USUARIO, ID_DETALLE, CUOTA_INICIAL, INCENTIVO_ECONOMICO, RECAMBIO_BATERIA, SEGURO, ENERGIA, MANTENIMIENTO_CONTINUO, 
                CARGA_FINANCIERA, CARGA_INSTALACION, REVENTA_VEHICULO, OTROS_TRANSPORTES, MANTENIMIENTO_EXTRAORDINARIO, TOTAL, REG_USUARIO, REG_FECHA)
    VALUES (PI_ID_RESULTADO, PI_ID_USUARIO, PI_ID_DETALLE, PI_CUOTA_INICIAL, PI_INCENTIVO_ECONOMICO, PI_RECAMBIO_BATERIA, PI_SEGURO, PI_ENERGIA, PI_MANTENIMIENTO_CONTINUO, 
                PI_CARGA_FINANCIERA, PI_CARGA_INSTALACION, PI_REVENTA_VEHICULO, PI_OTROS_TRANSPORTES, PI_MANTENIMIENTO_EXTRAORDINA, PI_TOTAL, PI_UPD_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_COSTO_VC;
  
  PROCEDURE USP_INS_GUARDAR_COSTO_VE(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_CUOTA_INICIAL NUMBER,
    PI_INCENTIVO_ECONOMICO NUMBER,
    PI_RECAMBIO_BATERIA NUMBER,
    PI_SEGURO NUMBER,
    PI_ENERGIA NUMBER,
    PI_MANTENIMIENTO_CONTINUO NUMBER,
    PI_CARGA_FINANCIERA NUMBER,
    PI_CARGA_INSTALACION NUMBER,
    PI_REVENTA_VEHICULO NUMBER,
    PI_OTROS_TRANSPORTES NUMBER,
    PI_MANTENIMIENTO_EXTRAORDINA NUMBER,
    PI_TOTAL NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    INSERT INTO T_GEND_COSTO_VE (ID_RESULTADO, ID_USUARIO, ID_DETALLE, CUOTA_INICIAL, INCENTIVO_ECONOMICO, RECAMBIO_BATERIA, SEGURO, ENERGIA, MANTENIMIENTO_CONTINUO, 
                CARGA_FINANCIERA, CARGA_INSTALACION, REVENTA_VEHICULO, OTROS_TRANSPORTES, MANTENIMIENTO_EXTRAORDINARIO, TOTAL, REG_USUARIO, REG_FECHA)
    VALUES (PI_ID_RESULTADO, PI_ID_USUARIO, PI_ID_DETALLE, PI_CUOTA_INICIAL, PI_INCENTIVO_ECONOMICO, PI_RECAMBIO_BATERIA, PI_SEGURO, PI_ENERGIA, PI_MANTENIMIENTO_CONTINUO, 
                PI_CARGA_FINANCIERA, PI_CARGA_INSTALACION, PI_REVENTA_VEHICULO, PI_OTROS_TRANSPORTES, PI_MANTENIMIENTO_EXTRAORDINA, PI_TOTAL, PI_UPD_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_COSTO_VE;
  
  PROCEDURE USP_INS_GUARDAR_CONSUMO_VC(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_VEHICULO_PROPIO_VC NUMBER,
    PI_SERVICIO_PUBLICO_1 NUMBER,
    PI_SERVICIO_PUBLICO_2 NUMBER,
    PI_SERVICIO_PUBLICO_3 NUMBER,
    PI_SERVICIO_PUBLICO_4 NUMBER,
    PI_TOTAL_PUBLICO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    INSERT INTO T_GEND_CONSUMO_VC (ID_RESULTADO, ID_USUARIO, ID_DETALLE, VEHICULO_PROPIO_VC, SERVICIO_PUBLICO_1, SERVICIO_PUBLICO_2, SERVICIO_PUBLICO_3, SERVICIO_PUBLICO_4, TOTAL_PUBLICO, REG_USUARIO, REG_FECHA)
    VALUES (PI_ID_RESULTADO, PI_ID_USUARIO, PI_ID_DETALLE, PI_VEHICULO_PROPIO_VC, PI_SERVICIO_PUBLICO_1, PI_SERVICIO_PUBLICO_2, PI_SERVICIO_PUBLICO_3, PI_SERVICIO_PUBLICO_4, PI_TOTAL_PUBLICO, PI_UPD_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_CONSUMO_VC;
  
  PROCEDURE USP_INS_GUARDAR_CONSUMO_VE(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_VEHICULO_PROPIO_VE NUMBER,
    PI_SERVICIO_PUBLICO_1 NUMBER,
    PI_SERVICIO_PUBLICO_2 NUMBER,
    PI_SERVICIO_PUBLICO_3 NUMBER,
    PI_SERVICIO_PUBLICO_4 NUMBER,
    PI_TOTAL_PUBLICO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    INSERT INTO T_GEND_CONSUMO_VE (ID_RESULTADO, ID_USUARIO, ID_DETALLE, VEHICULO_PROPIO_VE, SERVICIO_PUBLICO_1, SERVICIO_PUBLICO_2, SERVICIO_PUBLICO_3, SERVICIO_PUBLICO_4, TOTAL_PUBLICO, REG_USUARIO, REG_FECHA)
    VALUES (PI_ID_RESULTADO, PI_ID_USUARIO, PI_ID_DETALLE, PI_VEHICULO_PROPIO_VE, PI_SERVICIO_PUBLICO_1, PI_SERVICIO_PUBLICO_2, PI_SERVICIO_PUBLICO_3, PI_SERVICIO_PUBLICO_4, PI_TOTAL_PUBLICO, PI_UPD_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_CONSUMO_VE;
  
  PROCEDURE USP_INS_GUARDAR_EMISIONES_VC(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_FABRICACION_BATERIA_VC NUMBER,
    PI_OPERACION_VEHICULO_VC NUMBER,
    PI_FABRICACION_VEHICULO_VC NUMBER,
    PI_SERVICIO_TRANSPORTE NUMBER,
    PI_TOTAL_VC NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    INSERT INTO T_GEND_EMISIONES_VC (ID_RESULTADO, ID_USUARIO, ID_DETALLE, FABRICACION_BATERIA_VC, OPERACION_VEHICULO_VC, FABRICACION_VEHICULO_VC, SERVICIO_TRANSPORTE, TOTAL_VC, REG_USUARIO, REG_FECHA)
    VALUES (PI_ID_RESULTADO, PI_ID_USUARIO, PI_ID_DETALLE, PI_FABRICACION_BATERIA_VC, PI_OPERACION_VEHICULO_VC, PI_FABRICACION_VEHICULO_VC, PI_SERVICIO_TRANSPORTE, PI_TOTAL_VC, PI_UPD_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_EMISIONES_VC;
  
  PROCEDURE USP_INS_GUARDAR_EMISIONES_VE(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_FABRICACION_BATERIA_VE NUMBER,
    PI_OPERACION_VEHICULO_VE NUMBER,
    PI_FABRICACION_VEHICULO_VE NUMBER,
    PI_SERVICIO_TRANSPORTE NUMBER,
    PI_TOTAL_VE NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    INSERT INTO T_GEND_EMISIONES_VE (ID_RESULTADO, ID_USUARIO, ID_DETALLE, FABRICACION_BATERIA_VE, OPERACION_VEHICULO_VE, FABRICACION_VEHICULO_VE, SERVICIO_TRANSPORTE, TOTAL_VE, REG_USUARIO, REG_FECHA)
    VALUES (PI_ID_RESULTADO, PI_ID_USUARIO, PI_ID_DETALLE, PI_FABRICACION_BATERIA_VE, PI_OPERACION_VEHICULO_VE, PI_FABRICACION_VEHICULO_VE, PI_SERVICIO_TRANSPORTE, PI_TOTAL_VE, PI_UPD_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_EMISIONES_VE;
  
  PROCEDURE USP_INS_GUARDAR_CONTAMINANTE(
    PI_ID_RESULTADO NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_TOTAL_NOX NUMBER,
    PI_TOTAL_CO NUMBER,
    PI_TOTAL_PM25 NUMBER,
    PI_TOTAL_BC NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    INSERT INTO T_GEND_CONTAMINANTE_LOCAL (ID_RESULTADO, ID_USUARIO, ID_DETALLE, TOTAL_NOX, TOTAL_CO, TOTAL_PM25, TOTAL_BC, REG_USUARIO, REG_FECHA)
    VALUES (PI_ID_RESULTADO, PI_ID_USUARIO, PI_ID_DETALLE, PI_TOTAL_NOX, PI_TOTAL_CO, PI_TOTAL_PM25, PI_TOTAL_BC, PI_UPD_USUARIO, SYSDATE);
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_GUARDAR_CONTAMINANTE;
  
  PROCEDURE USP_SEL_LISTA_RESULTADOS(
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM (
      SELECT 
      R.*,
      ROW_NUMBER() OVER (ORDER BY R.ID_RESULTADO ASC) AS ROWNUMBER
      FROM T_GENM_RESULTADO r
      WHERE R.FLAG_ESTADO = '1' AND R.ID_USUARIO = PI_ID_USUARIO
    );
  END USP_SEL_LISTA_RESULTADOS;
  
  PROCEDURE USP_SEL_LISTA_LEYENDA(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM
    T_GEND_LEYENDA
    WHERE FLAG_ESTADO = '1' AND ID_USUARIO = PI_ID_USUARIO AND ID_RESULTADO = PI_ID_RESULTADO
    ORDER BY ID_DETALLE ASC;
  END USP_SEL_LISTA_LEYENDA;
  
  PROCEDURE USP_SEL_LISTA_COSTO_VC(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM
    T_GEND_COSTO_VC
    WHERE FLAG_ESTADO = '1' AND ID_USUARIO = PI_ID_USUARIO AND ID_RESULTADO = PI_ID_RESULTADO
    ORDER BY ID_DETALLE ASC;
  END USP_SEL_LISTA_COSTO_VC;
  
  PROCEDURE USP_SEL_LISTA_COSTO_VE(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM
    T_GEND_COSTO_VE
    WHERE FLAG_ESTADO = '1' AND ID_USUARIO = PI_ID_USUARIO AND ID_RESULTADO = PI_ID_RESULTADO
    ORDER BY ID_DETALLE ASC;
  END USP_SEL_LISTA_COSTO_VE;
  
  PROCEDURE USP_SEL_LISTA_CONSUMO_VC(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM
    T_GEND_CONSUMO_VC
    WHERE FLAG_ESTADO = '1' AND ID_USUARIO = PI_ID_USUARIO AND ID_RESULTADO = PI_ID_RESULTADO
    ORDER BY ID_DETALLE ASC;
  END USP_SEL_LISTA_CONSUMO_VC;
  
  PROCEDURE USP_SEL_LISTA_CONSUMO_VE(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM
    T_GEND_CONSUMO_VE
    WHERE FLAG_ESTADO = '1' AND ID_USUARIO = PI_ID_USUARIO AND ID_RESULTADO = PI_ID_RESULTADO
    ORDER BY ID_DETALLE ASC;
  END USP_SEL_LISTA_CONSUMO_VE;
  
  PROCEDURE USP_SEL_LISTA_EMISIONES_VC(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM
    T_GEND_EMISIONES_VC
    WHERE FLAG_ESTADO = '1' AND ID_USUARIO = PI_ID_USUARIO AND ID_RESULTADO = PI_ID_RESULTADO
    ORDER BY ID_DETALLE ASC;
  END USP_SEL_LISTA_EMISIONES_VC;
  
  PROCEDURE USP_SEL_LISTA_EMISIONES_VE(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM
    T_GEND_EMISIONES_VE
    WHERE FLAG_ESTADO = '1' AND ID_USUARIO = PI_ID_USUARIO AND ID_RESULTADO = PI_ID_RESULTADO
    ORDER BY ID_DETALLE ASC;
  END USP_SEL_LISTA_EMISIONES_VE;
  
  PROCEDURE USP_SEL_LISTA_CONTAMINANTE(
    PI_ID_USUARIO NUMBER,
    PI_ID_RESULTADO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM
    T_GEND_CONTAMINANTE_LOCAL
    WHERE FLAG_ESTADO = '1' AND ID_USUARIO = PI_ID_USUARIO AND ID_RESULTADO = PI_ID_RESULTADO
    ORDER BY ID_DETALLE ASC;
  END USP_SEL_LISTA_CONTAMINANTE;
  
  PROCEDURE USP_DEL_RESULTADO(
    PI_ID_RESULTADO NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_RESULTADO SET
    FLAG_ESTADO = '0'
    WHERE ID_RESULTADO = PI_ID_RESULTADO;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_DEL_RESULTADO;
  
  PROCEDURE USP_SEL_ALL_ESTACION(				  
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  
    *
    FROM  T_GENM_ESTACION
    WHERE FLAG_ESTADO = '1'
    ORDER BY ID_ESTACION ASC;
  END USP_SEL_ALL_ESTACION;

END PKG_ELECTROMOV_CALCULO;

/


--------------------------------------------------------
--  DDL for Package Body PKG_ELECTROMOV_MANTENIMIENTO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "ELECTROMOVILIDAD"."PKG_ELECTROMOV_MANTENIMIENTO" AS
  
  PROCEDURE USP_RESET_USUARIO(
    PI_CORREO VARCHAR2,
    PI_CONTRASENA VARCHAR2,
    PO_ROWAFFECTED OUT NUMBER
  )AS
    V_CLAVE VARCHAR2(8);
  BEGIN
    --SELECT DBMS_RANDOM.string('x', 8) INTO V_CLAVE FROM dual;
    
    UPDATE T_GENM_USUARIO U SET
    U.CONTRASENA = PI_CONTRASENA
    WHERE U.CORREO = PI_CORREO;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
    
  END USP_RESET_USUARIO;
  
  --SECCION ROL
  PROCEDURE USP_SEL_LISTA_BUSQ_ROL(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_MAE_ROL R
                    WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    R.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  R.ID_ROL,
                                R.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_MAE_ROL R
                        WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        R.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_ROL;
  
  PROCEDURE USP_UPD_ROL(
    PI_ID_ROL NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  ) AS
  BEGIN
    UPDATE T_MAE_ROL 
    SET NOMBRE = PI_NOMBRE,
        UPD_USUARIO = PI_USUARIO_GUARDAR,
        UPD_FECHA = SYSDATE
    WHERE ID_ROL = PI_ID_ROL;
  END USP_UPD_ROL;
  
  PROCEDURE USP_SEL_GET_ROL(
    PI_ID_ROL NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_MAE_ROL
    WHERE ID_ROL = PI_ID_ROL; 
  END USP_SEL_GET_ROL;
  
  PROCEDURE USP_SEL_OBTIENE_ROL(
    PI_ID_ROL NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT R.*
    FROM T_MAE_ROL R
    WHERE R.ID_ROL = PI_ID_ROL;
  END USP_SEL_OBTIENE_ROL;
  
  --SECCION TIPO VEHICULO CONVENCIONAL
  PROCEDURE USP_SEL_LISTA_BUSQ_VEH_CONV(
    PI_BUSCAR VARCHAR2,
	PI_FLAG_ESTADO VARCHAR2,						
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_TIPO_VEHICULO_CONV R
                    WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  R.ID_TIPO_VEHICULO_CONV,
                                R.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_TIPO_VEHICULO_CONV R
                        WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_VEH_CONV;
  
  PROCEDURE USP_PRC_GUARDAR_TIPO_VEH_CONV(
    PI_ID_TIPO_VEHICULO_CONV NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN    
    IF PI_ID_TIPO_VEHICULO_CONV = -1 THEN
      vID := SQ_GENM_TIPO_VEH_CONV.NEXTVAL();
      INSERT INTO T_GENM_TIPO_VEHICULO_CONV
      (ID_TIPO_VEHICULO_CONV, NOMBRE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_TIPO_VEHICULO_CONV SET
      NOMBRE = PI_NOMBRE,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_TIPO_VEHICULO_CONV = PI_ID_TIPO_VEHICULO_CONV;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_TIPO_VEH_CONV;
  
  PROCEDURE USP_SEL_GET_TIPO_VEH_CONV(
    PI_ID_TIPO_VEHICULO_CONV NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GENM_TIPO_VEHICULO_CONV
    WHERE ID_TIPO_VEHICULO_CONV = PI_ID_TIPO_VEHICULO_CONV; 
  END USP_SEL_GET_TIPO_VEH_CONV;
  
  PROCEDURE USP_DEL_TIPO_VEH_CONV(
    PI_ID_TIPO_VEHICULO_CONV NUMBER,
    PI_UPD_USUARIO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_TIPO_VEHICULO_CONV
    SET FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_TIPO_VEHICULO_CONV = PI_ID_TIPO_VEHICULO_CONV;
  END USP_DEL_TIPO_VEH_CONV;
  
  --SECCION TIPO VEHICULO ELECTRICO
  PROCEDURE USP_SEL_LISTA_BUSQ_VEH_ELEC(
    PI_BUSCAR VARCHAR2,
	PI_FLAG_ESTADO VARCHAR2,						
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_TIPO_VEHICULO_ELEC R
                    WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  R.ID_TIPO_VEHICULO_ELEC,
                                R.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_TIPO_VEHICULO_ELEC R
                        WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_VEH_ELEC;
  
  PROCEDURE USP_PRC_GUARDAR_TIPO_VEH_ELEC(
    PI_ID_TIPO_VEHICULO_ELEC NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN    
    IF PI_ID_TIPO_VEHICULO_ELEC = -1 THEN
      vID := SQ_GENM_TIPO_VEH_ELEC.NEXTVAL();
      INSERT INTO T_GENM_TIPO_VEHICULO_ELEC
      (ID_TIPO_VEHICULO_ELEC, NOMBRE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_TIPO_VEHICULO_ELEC SET
      NOMBRE = PI_NOMBRE,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_TIPO_VEHICULO_ELEC = PI_ID_TIPO_VEHICULO_ELEC;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_TIPO_VEH_ELEC;
  
  PROCEDURE USP_SEL_GET_TIPO_VEH_ELEC(
    PI_ID_TIPO_VEHICULO_ELEC NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GENM_TIPO_VEHICULO_ELEC
    WHERE ID_TIPO_VEHICULO_ELEC = PI_ID_TIPO_VEHICULO_ELEC; 
  END USP_SEL_GET_TIPO_VEH_ELEC;
  
  PROCEDURE USP_DEL_TIPO_VEH_ELEC(
    PI_ID_TIPO_VEHICULO_ELEC NUMBER,
    PI_UPD_USUARIO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_TIPO_VEHICULO_ELEC
    SET FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_TIPO_VEHICULO_ELEC = PI_ID_TIPO_VEHICULO_ELEC;
  END USP_DEL_TIPO_VEH_ELEC;
  
  --SECCION TIPO TRANSPORTE
  PROCEDURE USP_SEL_LISTA_BUSQ_TRANSP(
    PI_BUSCAR VARCHAR2,
	PI_FLAG_ESTADO VARCHAR2,						
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_TIPO_TRANSPORTE
                    WHERE LOWER(TRANSLATE(NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  ID_TIPO_TRANSPORTE,
                                NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_TIPO_TRANSPORTE
                        WHERE LOWER(TRANSLATE(NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_TRANSP;
  
  PROCEDURE USP_PRC_GUARDAR_TIPO_TRANSP(
    PI_ID_TIPO_TRANSPORTE NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN    
    IF PI_ID_TIPO_TRANSPORTE = -1 THEN
      vID := SQ_GENM_TIPO_TRANSP.NEXTVAL();
      INSERT INTO T_GENM_TIPO_TRANSPORTE
      (ID_TIPO_TRANSPORTE, NOMBRE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_TIPO_TRANSPORTE SET
      NOMBRE = PI_NOMBRE,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_TIPO_TRANSPORTE = PI_ID_TIPO_TRANSPORTE;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_TIPO_TRANSP;
  
  PROCEDURE USP_SEL_GET_TIPO_TRANSP(
    PI_ID_TIPO_TRANSPORTE NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GENM_TIPO_TRANSPORTE
    WHERE ID_TIPO_TRANSPORTE = PI_ID_TIPO_TRANSPORTE; 
  END USP_SEL_GET_TIPO_TRANSP;
  
  PROCEDURE USP_DEL_TIPO_TRANSP(
    PI_ID_TIPO_TRANSPORTE NUMBER,
    PI_UPD_USUARIO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_TIPO_TRANSPORTE
    SET FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_TIPO_TRANSPORTE = PI_ID_TIPO_TRANSPORTE;
  END USP_DEL_TIPO_TRANSP;
  
  --SECCION FORMULA
  PROCEDURE USP_SEL_LIST_CASO(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_MAE_CASO;
  END USP_SEL_LIST_CASO;
  
  PROCEDURE USP_SEL_LIST_FACTOR(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT F.* FROM T_GENM_CASO_FACTOR CF
    INNER JOIN T_MAE_FACTOR F ON CF.ID_FACTOR = F.ID_FACTOR
    WHERE CF.ID_CASO = PI_ID_CASO;
  END USP_SEL_LIST_FACTOR;
  
  PROCEDURE USP_SEL_LIST_PARAMETRO(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT P.* FROM T_GENM_CASO_PARAMETRO CP
    INNER JOIN T_MAE_PARAMETRO P ON CP.ID_PARAMETRO = P.ID_PARAMETRO
    WHERE CP.ID_CASO = PI_ID_CASO;
  END USP_SEL_LIST_PARAMETRO;
  
  PROCEDURE USP_SEL_LISTA_BUSQ_FORMULA(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_FORMULA F
                    INNER JOIN T_MAE_CASO C ON F.ID_CASO = C.ID_CASO
                    WHERE LOWER(TRANSLATE(F.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    F.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := 'F.' || PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  F.ID_FORMULA,
                                C.NOMBRE CASO,
                                F.NOMBRE,
                                F.FORMULA,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_FORMULA F
                        INNER JOIN T_MAE_CASO C ON F.ID_CASO = C.ID_CASO
                        WHERE LOWER(TRANSLATE(F.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        F.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_FORMULA;
  
  PROCEDURE USP_SEL_GET_FORMULA(
    PI_ID_FORMULA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GENM_FORMULA
    WHERE ID_FORMULA = PI_ID_FORMULA; 
  END USP_SEL_GET_FORMULA;
  
  PROCEDURE USP_UPD_FORMULA(
    PI_ID_FORMULA NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_FORMULA VARCHAR2,
    PI_FORMULA_ARMADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_FORMULA SET
    FORMULA = PI_FORMULA,
    FORMULA_ARMADO = PI_FORMULA_ARMADO,
    NOMBRE = PI_NOMBRE,
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_FORMULA = PI_ID_FORMULA;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_UPD_FORMULA;
  
  --SECCION VALORES FACTOR
  PROCEDURE USP_SEL_LISTA_BUSQ_CASO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_MAE_CASO
                    WHERE LOWER(TRANSLATE(NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  ID_CASO,
                                NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_MAE_CASO
                        WHERE LOWER(TRANSLATE(NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_CASO;
  
  PROCEDURE USP_SEL_LIST_CASO_FACTOR(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  F.*
    FROM  T_GENM_CASO_FACTOR CF
    INNER JOIN T_MAE_FACTOR F ON CF.ID_FACTOR = F.ID_FACTOR
    WHERE CF.ID_CASO = PI_ID_CASO; 
  END USP_SEL_LIST_CASO_FACTOR;
  
  PROCEDURE USP_SEL_DATA_PARAM_DET(
    PI_SQL VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR PI_SQL;
  END USP_SEL_DATA_PARAM_DET;
  
  PROCEDURE USP_GET_LISTA_FACTOR_VALOR(
      PI_ID_FACTOR VARCHAR2,
      PO_REF OUT SYS_REFCURSOR
  ) 
  AS
  BEGIN   
    OPEN PO_REF FOR
    SELECT 
    * 
    FROM T_MAE_FACTOR_DATA
    WHERE ID_FACTOR = PI_ID_FACTOR AND FLAG_ESTADO = '1';
  END USP_GET_LISTA_FACTOR_VALOR;
  
  PROCEDURE USP_PRC_MAN_FACTOR_DATA(
        PI_ID_FACTOR IN NUMBER,
        PI_ID_DETALLE IN NUMBER,
        PI_PARAMETROS IN VARCHAR2,
        PI_VALORES IN VARCHAR2,
        PI_FACTOR IN NUMBER,
        PI_UNIDAD VARCHAR2,
        PI_USUARIO_GUARDAR NUMBER,
        PO_ROWAFFECTED OUT NUMBER        
  )AS
  BEGIN
        UPDATE  T_MAE_FACTOR_DATA
        SET     PARAMETROS = PI_PARAMETROS, 
                VALORES = PI_VALORES, 
                FACTOR = PI_FACTOR, 
                UNIDAD = PI_UNIDAD,
                UPD_USUARIO = PI_USUARIO_GUARDAR, 
                UPD_FECHA = SYSDATE
        WHERE ID_FACTOR = PI_ID_FACTOR AND ID_DETALLE = PI_ID_DETALLE;
      PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_MAN_FACTOR_DATA;
  
  --SECCION TIPO COMBUSTIBLE
  PROCEDURE USP_SEL_LISTA_BUSQ_COMBUS(
    PI_BUSCAR VARCHAR2,
	PI_FLAG_ESTADO VARCHAR2,						
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_TIPO_COMBUSTIBLE R
                    WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  R.ID_TIPO_COMBUSTIBLE,
                                R.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_TIPO_COMBUSTIBLE R
                        WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_COMBUS;
  
  PROCEDURE USP_PRC_GUARDAR_TIPO_COMBUS(
    PI_ID_TIPO_COMBUSTIBLE NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN    
    IF PI_ID_TIPO_COMBUSTIBLE = -1 THEN
      vID := SQ_GENM_TIPO_COMB.NEXTVAL();
      INSERT INTO T_GENM_TIPO_COMBUSTIBLE
      (ID_TIPO_COMBUSTIBLE, NOMBRE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_TIPO_COMBUSTIBLE SET
      NOMBRE = PI_NOMBRE,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_TIPO_COMBUSTIBLE = PI_ID_TIPO_COMBUSTIBLE;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_TIPO_COMBUS;
  
  PROCEDURE USP_SEL_GET_TIPO_COMBUS(
    PI_ID_TIPO_COMBUSTIBLE NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GENM_TIPO_COMBUSTIBLE
    WHERE ID_TIPO_COMBUSTIBLE = PI_ID_TIPO_COMBUSTIBLE; 
  END USP_SEL_GET_TIPO_COMBUS;
  
  PROCEDURE USP_DEL_TIPO_COMBUS(
    PI_ID_TIPO_COMBUSTIBLE NUMBER,
    PI_UPD_USUARIO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_TIPO_COMBUSTIBLE
    SET FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_TIPO_COMBUSTIBLE = PI_ID_TIPO_COMBUSTIBLE;
  END USP_DEL_TIPO_COMBUS;

  --SECCION USUARIO
  PROCEDURE USP_SEL_LISTA_BUSQ_USUARIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_USUARIO U
                    INNER JOIN T_MAE_ROL R ON U.ID_ROL = R.ID_ROL
                    WHERE (
                    LOWER(TRANSLATE(U.NOMBRES,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(U.CORREO,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%''
                    )';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    IF PI_COLUMNA = 'PERFIL' THEN
      vCOLUMNA := 'R.NOMBRE';
    END IF;
    IF PI_COLUMNA = 'ESTADO' THEN
      vCOLUMNA := 'U.FLAG_ESTADO';
    ELSE
      vCOLUMNA := PI_COLUMNA;
    END IF;

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  U.ID_USUARIO,
                                U.NOMBRES,
                                U.CORREO,
                                U.ID_ROL,
                                R.NOMBRE NOMBRE_ROL,
                                U.FLAG_ESTADO,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_USUARIO U
                        INNER JOIN T_MAE_ROL R ON U.ID_ROL = R.ID_ROL
                        WHERE (
                        LOWER(TRANSLATE(U.NOMBRES,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(U.CORREO,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%''
                        )
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_USUARIO;
  
  PROCEDURE USP_PRC_GUARDAR_USUARIO(
    PI_ID_USUARIO IN OUT NUMBER,
    PI_NOMBRES VARCHAR2,
    PI_ID_GENERO NUMBER,
    PI_CORREO VARCHAR2,
    PI_CONTRASENA VARCHAR2,
    PI_ID_ROL NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT U.ID_USUARIO FROM T_GENM_USUARIO U WHERE U.ID_USUARIO = PI_ID_USUARIO)
    INTO vID
    FROM DUAL;

    IF vID IS NULL THEN
      PI_ID_USUARIO := SQ_GENM_USUARIO.NEXTVAL();
      INSERT INTO T_GENM_USUARIO
      (ID_USUARIO, NOMBRES, ID_GENERO, CORREO, CONTRASENA, ID_ROL, FLAG_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_USUARIO, PI_NOMBRES, PI_ID_GENERO, PI_CORREO, PI_CONTRASENA, PI_ID_ROL, PI_FLAG_ESTADO, PI_UPD_USUARIO, SYSDATE);
      
      IF PI_ID_ROL = 1 THEN
          UPDATE T_GENM_USUARIO SET FLAG_ESTADO = '0', UPD_USUARIO = PI_UPD_USUARIO, UPD_FECHA = SYSDATE WHERE ID_USUARIO = PI_UPD_USUARIO;
      END IF;
    ELSE
      UPDATE T_GENM_USUARIO U SET
      U.NOMBRES = PI_NOMBRES,
      U.ID_GENERO = PI_ID_GENERO,
      U.CORREO = PI_CORREO,
      U.FLAG_ESTADO = PI_FLAG_ESTADO,
      U.ID_ROL = PI_ID_ROL
      WHERE U.ID_USUARIO = PI_ID_USUARIO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_USUARIO;
  
  PROCEDURE USP_SEL_OBTIENE_USUARIO(
    PI_ID_USUARIO IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT U.*, R.NOMBRE NOMBRE_ROL --ADD 3/3/21
    FROM T_GENM_USUARIO U
    INNER JOIN T_MAE_ROL R ON U.ID_ROL = R.ID_ROL		 
    WHERE   U.ID_USUARIO = PI_ID_USUARIO;
  END USP_SEL_OBTIENE_USUARIO;  

  --
  PROCEDURE USP_SEL_LISTA_ROL_ESTADO(
    PI_FLAG_ESTADO VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT R.ID_ROL, R.NOMBRE, R.FLAG_ESTADO
    FROM T_MAE_ROL R
    WHERE R.FLAG_ESTADO = PI_FLAG_ESTADO;
  END USP_SEL_LISTA_ROL_ESTADO;

END PKG_ELECTROMOV_MANTENIMIENTO;

/

