--------------------------------------------------------
-- Archivo creado  - viernes-marzo-05-2021   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Package Body PKG_ELECTROMOV_MANTENIMIENTO
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "ELECTROMOVILIDAD"."PKG_ELECTROMOV_MANTENIMIENTO" AS
  
  PROCEDURE USP_RESET_USUARIO(
    PI_CORREO VARCHAR2,
    PI_CONTRASENA VARCHAR2,
    PO_ROWAFFECTED OUT NUMBER
  )AS
    V_CLAVE VARCHAR2(8);
  BEGIN
    --SELECT DBMS_RANDOM.string('x', 8) INTO V_CLAVE FROM dual;
    
    UPDATE T_GENM_USUARIO U SET
    U.CONTRASENA = PI_CONTRASENA
    WHERE U.CORREO = PI_CORREO;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
    
  END USP_RESET_USUARIO;
  
  --SECCION ROL
  PROCEDURE USP_SEL_LISTA_BUSQ_ROL(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_MAE_ROL R
                    WHERE LOWER(TRANSLATE(R.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                    R.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  R.ID_ROL,
                                R.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_MAE_ROL R
                        WHERE LOWER(TRANSLATE(R.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                        R.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_ROL;
  
  PROCEDURE USP_UPD_ROL(
    PI_ID_ROL NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  ) AS
  BEGIN
    UPDATE T_MAE_ROL 
    SET NOMBRE = PI_NOMBRE,
        UPD_USUARIO = PI_USUARIO_GUARDAR,
        UPD_FECHA = SYSDATE
    WHERE ID_ROL = PI_ID_ROL;
  END USP_UPD_ROL;
  
  PROCEDURE USP_SEL_GET_ROL(
    PI_ID_ROL NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_MAE_ROL
    WHERE ID_ROL = PI_ID_ROL; 
  END USP_SEL_GET_ROL;
  
  PROCEDURE USP_SEL_OBTIENE_ROL(
    PI_ID_ROL NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT R.*
    FROM T_MAE_ROL R
    WHERE R.ID_ROL = PI_ID_ROL;
  END USP_SEL_OBTIENE_ROL;
  
  --SECCION TIPO VEHICULO CONVENCIONAL
  PROCEDURE USP_SEL_LISTA_BUSQ_VEH_CONV(
    PI_BUSCAR VARCHAR2,
    PI_FLAG_ESTADO VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_TIPO_VEHICULO_CONV R
                    WHERE LOWER(TRANSLATE(R.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                    R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  R.ID_TIPO_VEHICULO_CONV,
                                R.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_TIPO_VEHICULO_CONV R
                        WHERE LOWER(TRANSLATE(R.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                        R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_VEH_CONV;
  
  PROCEDURE USP_PRC_GUARDAR_TIPO_VEH_CONV(
    PI_ID_TIPO_VEHICULO_CONV NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN    
    IF PI_ID_TIPO_VEHICULO_CONV = -1 THEN
      vID := SQ_GENM_TIPO_VEH_CONV.NEXTVAL();
      INSERT INTO T_GENM_TIPO_VEHICULO_CONV
      (ID_TIPO_VEHICULO_CONV, NOMBRE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_TIPO_VEHICULO_CONV SET
      NOMBRE = PI_NOMBRE,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_TIPO_VEHICULO_CONV = PI_ID_TIPO_VEHICULO_CONV;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_TIPO_VEH_CONV;
  
  PROCEDURE USP_SEL_GET_TIPO_VEH_CONV(
    PI_ID_TIPO_VEHICULO_CONV NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GENM_TIPO_VEHICULO_CONV
    WHERE ID_TIPO_VEHICULO_CONV = PI_ID_TIPO_VEHICULO_CONV; 
  END USP_SEL_GET_TIPO_VEH_CONV;
  
  PROCEDURE USP_DEL_TIPO_VEH_CONV(
    PI_ID_TIPO_VEHICULO_CONV NUMBER,
    PI_UPD_USUARIO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_TIPO_VEHICULO_CONV
    SET FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_TIPO_VEHICULO_CONV = PI_ID_TIPO_VEHICULO_CONV;
  END USP_DEL_TIPO_VEH_CONV;
  
  --SECCION TIPO VEHICULO ELECTRICO
  PROCEDURE USP_SEL_LISTA_BUSQ_VEH_ELEC(
    PI_BUSCAR VARCHAR2,
    PI_FLAG_ESTADO VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_TIPO_VEHICULO_ELEC R
                    WHERE LOWER(TRANSLATE(R.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                    R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  R.ID_TIPO_VEHICULO_ELEC,
                                R.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_TIPO_VEHICULO_ELEC R
                        WHERE LOWER(TRANSLATE(R.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                        R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_VEH_ELEC;
  
  PROCEDURE USP_PRC_GUARDAR_TIPO_VEH_ELEC(
    PI_ID_TIPO_VEHICULO_ELEC NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN    
    IF PI_ID_TIPO_VEHICULO_ELEC = -1 THEN
      vID := SQ_GENM_TIPO_VEH_ELEC.NEXTVAL();
      INSERT INTO T_GENM_TIPO_VEHICULO_ELEC
      (ID_TIPO_VEHICULO_ELEC, NOMBRE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_TIPO_VEHICULO_ELEC SET
      NOMBRE = PI_NOMBRE,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_TIPO_VEHICULO_ELEC = PI_ID_TIPO_VEHICULO_ELEC;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_TIPO_VEH_ELEC;
  
  PROCEDURE USP_SEL_GET_TIPO_VEH_ELEC(
    PI_ID_TIPO_VEHICULO_ELEC NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GENM_TIPO_VEHICULO_ELEC
    WHERE ID_TIPO_VEHICULO_ELEC = PI_ID_TIPO_VEHICULO_ELEC; 
  END USP_SEL_GET_TIPO_VEH_ELEC;
  
  PROCEDURE USP_DEL_TIPO_VEH_ELEC(
    PI_ID_TIPO_VEHICULO_ELEC NUMBER,
    PI_UPD_USUARIO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_TIPO_VEHICULO_ELEC
    SET FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_TIPO_VEHICULO_ELEC = PI_ID_TIPO_VEHICULO_ELEC;
  END USP_DEL_TIPO_VEH_ELEC;
  
  --SECCION TIPO TRANSPORTE
  PROCEDURE USP_SEL_LISTA_BUSQ_TRANSP(
    PI_BUSCAR VARCHAR2,
    PI_FLAG_ESTADO VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_TIPO_TRANSPORTE
                    WHERE LOWER(TRANSLATE(NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                    FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  ID_TIPO_TRANSPORTE,
                                NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_TIPO_TRANSPORTE
                        WHERE LOWER(TRANSLATE(NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                        FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_TRANSP;
  
  PROCEDURE USP_PRC_GUARDAR_TIPO_TRANSP(
    PI_ID_TIPO_TRANSPORTE NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN    
    IF PI_ID_TIPO_TRANSPORTE = -1 THEN
      vID := SQ_GENM_TIPO_TRANSP.NEXTVAL();
      INSERT INTO T_GENM_TIPO_TRANSPORTE
      (ID_TIPO_TRANSPORTE, NOMBRE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_TIPO_TRANSPORTE SET
      NOMBRE = PI_NOMBRE,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_TIPO_TRANSPORTE = PI_ID_TIPO_TRANSPORTE;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_TIPO_TRANSP;
  
  PROCEDURE USP_SEL_GET_TIPO_TRANSP(
    PI_ID_TIPO_TRANSPORTE NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GENM_TIPO_TRANSPORTE
    WHERE ID_TIPO_TRANSPORTE = PI_ID_TIPO_TRANSPORTE; 
  END USP_SEL_GET_TIPO_TRANSP;
  
  PROCEDURE USP_DEL_TIPO_TRANSP(
    PI_ID_TIPO_TRANSPORTE NUMBER,
    PI_UPD_USUARIO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_TIPO_TRANSPORTE
    SET FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_TIPO_TRANSPORTE = PI_ID_TIPO_TRANSPORTE;
  END USP_DEL_TIPO_TRANSP;
  
  --SECCION FORMULA
  PROCEDURE USP_SEL_LIST_CASO(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM T_MAE_CASO;
  END USP_SEL_LIST_CASO;
  
  PROCEDURE USP_SEL_LIST_FACTOR(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT F.* FROM T_GENM_CASO_FACTOR CF
    INNER JOIN T_MAE_FACTOR F ON CF.ID_FACTOR = F.ID_FACTOR
    WHERE CF.ID_CASO = PI_ID_CASO;
  END USP_SEL_LIST_FACTOR;
  
  PROCEDURE USP_SEL_LIST_PARAMETRO(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT P.* FROM T_GENM_CASO_PARAMETRO CP
    INNER JOIN T_MAE_PARAMETRO P ON CP.ID_PARAMETRO = P.ID_PARAMETRO
    WHERE CP.ID_CASO = PI_ID_CASO;
  END USP_SEL_LIST_PARAMETRO;
  
  PROCEDURE USP_SEL_LISTA_BUSQ_FORMULA(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_FORMULA F
                    INNER JOIN T_MAE_CASO C ON F.ID_CASO = C.ID_CASO
                    WHERE LOWER(TRANSLATE(F.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                    F.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := 'F.' || PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  F.ID_FORMULA,
                                C.NOMBRE CASO,
                                F.NOMBRE,
                                F.FORMULA,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_FORMULA F
                        INNER JOIN T_MAE_CASO C ON F.ID_CASO = C.ID_CASO
                        WHERE LOWER(TRANSLATE(F.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                        F.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_FORMULA;
  
  PROCEDURE USP_SEL_GET_FORMULA(
    PI_ID_FORMULA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GENM_FORMULA
    WHERE ID_FORMULA = PI_ID_FORMULA; 
  END USP_SEL_GET_FORMULA;
  
  PROCEDURE USP_UPD_FORMULA(
    PI_ID_FORMULA NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_FORMULA VARCHAR2,
    PI_FORMULA_ARMADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_FORMULA SET
    FORMULA = PI_FORMULA,
    FORMULA_ARMADO = PI_FORMULA_ARMADO,
    NOMBRE = PI_NOMBRE,
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_FORMULA = PI_ID_FORMULA;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_UPD_FORMULA;
  
  --SECCION VALORES FACTOR
  PROCEDURE USP_SEL_LISTA_BUSQ_CASO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_MAE_CASO
                    WHERE LOWER(TRANSLATE(NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                    FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  ID_CASO,
                                NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_MAE_CASO
                        WHERE LOWER(TRANSLATE(NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                        FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_CASO;
  
  PROCEDURE USP_SEL_LIST_CASO_FACTOR(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  F.*
    FROM  T_GENM_CASO_FACTOR CF
    INNER JOIN T_MAE_FACTOR F ON CF.ID_FACTOR = F.ID_FACTOR
    WHERE CF.ID_CASO = PI_ID_CASO; 
  END USP_SEL_LIST_CASO_FACTOR;
  
  PROCEDURE USP_SEL_DATA_PARAM_DET(
    PI_SQL VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR PI_SQL;
  END USP_SEL_DATA_PARAM_DET;
  
  PROCEDURE USP_GET_LISTA_FACTOR_VALOR(
      PI_ID_FACTOR VARCHAR2,
      PO_REF OUT SYS_REFCURSOR
  ) 
  AS
  BEGIN   
    OPEN PO_REF FOR
    SELECT 
    * 
    FROM T_MAE_FACTOR_DATA
    WHERE ID_FACTOR = PI_ID_FACTOR AND FLAG_ESTADO = '1';
  END USP_GET_LISTA_FACTOR_VALOR;
  
  PROCEDURE USP_PRC_MAN_FACTOR_DATA(
        PI_ID_FACTOR IN NUMBER,
        PI_ID_DETALLE IN NUMBER,
        PI_PARAMETROS IN VARCHAR2,
        PI_VALORES IN VARCHAR2,
        PI_FACTOR IN NUMBER,
        PI_UNIDAD VARCHAR2,
        PI_USUARIO_GUARDAR NUMBER,
        PO_ROWAFFECTED OUT NUMBER        
  )AS
  BEGIN
        UPDATE  T_MAE_FACTOR_DATA
        SET     PARAMETROS = PI_PARAMETROS, 
                VALORES = PI_VALORES, 
                FACTOR = PI_FACTOR, 
                UNIDAD = PI_UNIDAD,
                UPD_USUARIO = PI_USUARIO_GUARDAR, 
                UPD_FECHA = SYSDATE
        WHERE ID_FACTOR = PI_ID_FACTOR AND ID_DETALLE = PI_ID_DETALLE;
      PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_MAN_FACTOR_DATA;
  
  --SECCION TIPO COMBUSTIBLE
  PROCEDURE USP_SEL_LISTA_BUSQ_COMBUS(
    PI_BUSCAR VARCHAR2,
    PI_FLAG_ESTADO VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_TIPO_COMBUSTIBLE R
                    WHERE LOWER(TRANSLATE(R.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                    R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  R.ID_TIPO_COMBUSTIBLE,
                                R.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_TIPO_COMBUSTIBLE R
                        WHERE LOWER(TRANSLATE(R.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' AND
                        R.FLAG_ESTADO = ''' || PI_FLAG_ESTADO ||'''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_COMBUS;
  
  PROCEDURE USP_PRC_GUARDAR_TIPO_COMBUS(
    PI_ID_TIPO_COMBUSTIBLE NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN    
    IF PI_ID_TIPO_COMBUSTIBLE = -1 THEN
      vID := SQ_GENM_TIPO_COMB.NEXTVAL();
      INSERT INTO T_GENM_TIPO_COMBUSTIBLE
      (ID_TIPO_COMBUSTIBLE, NOMBRE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_TIPO_COMBUSTIBLE SET
      NOMBRE = PI_NOMBRE,
      UPD_USUARIO = PI_UPD_USUARIO,
      UPD_FECHA = SYSDATE
      WHERE ID_TIPO_COMBUSTIBLE = PI_ID_TIPO_COMBUSTIBLE;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_TIPO_COMBUS;
  
  PROCEDURE USP_SEL_GET_TIPO_COMBUS(
    PI_ID_TIPO_COMBUSTIBLE NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GENM_TIPO_COMBUSTIBLE
    WHERE ID_TIPO_COMBUSTIBLE = PI_ID_TIPO_COMBUSTIBLE; 
  END USP_SEL_GET_TIPO_COMBUS;
  
  PROCEDURE USP_DEL_TIPO_COMBUS(
    PI_ID_TIPO_COMBUSTIBLE NUMBER,
    PI_UPD_USUARIO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_TIPO_COMBUSTIBLE
    SET FLAG_ESTADO = '0',
    UPD_USUARIO = PI_UPD_USUARIO,
    UPD_FECHA = SYSDATE
    WHERE ID_TIPO_COMBUSTIBLE = PI_ID_TIPO_COMBUSTIBLE;
  END USP_DEL_TIPO_COMBUS;

  --SECCION USUARIO
  PROCEDURE USP_SEL_LISTA_BUSQ_USUARIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_USUARIO U
                    INNER JOIN T_MAE_ROL R ON U.ID_ROL = R.ID_ROL
                    WHERE (
                    LOWER(TRANSLATE(U.NOMBRES,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(U.CORREO,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(R.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%''
                    )';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    IF PI_COLUMNA = 'PERFIL' THEN
      vCOLUMNA := 'R.NOMBRE';
    END IF;
    IF PI_COLUMNA = 'ESTADO' THEN
      vCOLUMNA := 'U.FLAG_ESTADO';
    ELSE
      vCOLUMNA := PI_COLUMNA;
    END IF;

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  U.ID_USUARIO,
                                U.NOMBRES,
                                U.CORREO,
                                U.ID_ROL,
                                R.NOMBRE NOMBRE_ROL,
                                U.FLAG_ESTADO,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_USUARIO U
                        INNER JOIN T_MAE_ROL R ON U.ID_ROL = R.ID_ROL
                        WHERE (
                        LOWER(TRANSLATE(U.NOMBRES,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(U.CORREO,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(R.NOMBRE,''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''¡…Õ”⁄·ÈÌÛ˙'',''AEIOUaeiou'')) ||''%''
                        )
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_USUARIO;
  
  PROCEDURE USP_PRC_GUARDAR_USUARIO(
    PI_ID_USUARIO IN OUT NUMBER,
    PI_NOMBRES VARCHAR2,
    PI_ID_GENERO NUMBER,
    PI_CORREO VARCHAR2,
    PI_CONTRASENA VARCHAR2,
    PI_ID_ROL NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT U.ID_USUARIO FROM T_GENM_USUARIO U WHERE U.ID_USUARIO = PI_ID_USUARIO)
    INTO vID
    FROM DUAL;

    IF vID IS NULL THEN
      PI_ID_USUARIO := SQ_GENM_USUARIO.NEXTVAL();
      INSERT INTO T_GENM_USUARIO
      (ID_USUARIO, NOMBRES, ID_GENERO, CORREO, CONTRASENA, ID_ROL, FLAG_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_USUARIO, PI_NOMBRES, PI_ID_GENERO, PI_CORREO, PI_CONTRASENA, PI_ID_ROL, PI_FLAG_ESTADO, PI_UPD_USUARIO, SYSDATE);
      
      IF PI_ID_ROL = 1 THEN
          UPDATE T_GENM_USUARIO SET FLAG_ESTADO = '0', UPD_USUARIO = PI_UPD_USUARIO, UPD_FECHA = SYSDATE WHERE ID_USUARIO = PI_UPD_USUARIO;
      END IF;
    ELSE
      UPDATE T_GENM_USUARIO U SET
      U.NOMBRES = PI_NOMBRES,
      U.ID_GENERO = PI_ID_GENERO,
      U.CORREO = PI_CORREO,
      U.FLAG_ESTADO = PI_FLAG_ESTADO,
      U.ID_ROL = PI_ID_ROL
      WHERE U.ID_USUARIO = PI_ID_USUARIO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_GUARDAR_USUARIO;
  
  PROCEDURE USP_SEL_OBTIENE_USUARIO(
    PI_ID_USUARIO IN NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT U.*, R.NOMBRE NOMBRE_ROL --ADD 3/3/21
    FROM T_GENM_USUARIO U
    INNER JOIN T_MAE_ROL R ON U.ID_ROL = R.ID_ROL
    WHERE   U.ID_USUARIO = PI_ID_USUARIO;
  END USP_SEL_OBTIENE_USUARIO;  

  --
  PROCEDURE USP_SEL_LISTA_ROL_ESTADO(
    PI_FLAG_ESTADO VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT R.ID_ROL, R.NOMBRE, R.FLAG_ESTADO
    FROM T_MAE_ROL R
    WHERE R.FLAG_ESTADO = PI_FLAG_ESTADO;
  END USP_SEL_LISTA_ROL_ESTADO;

END PKG_ELECTROMOV_MANTENIMIENTO;

/
